{"version":3,"sources":["Images/logo.png","Context/NotesContext.tsx","Context/WorkshopsContext.tsx","Context/DropdownsContext.tsx","Services/requests.tsx","Hooks/UseFetchData.ts","Hooks/UseFetchDataEffect.ts","Pages/Charts.tsx","Pages/Home.tsx","Pages/Login.tsx","Services/helpers.ts","Pages/Notes/Note.tsx","Components/HomeButton.tsx","Pages/Notes/Notes.tsx","Components/DatePickerField.tsx","Services/dropdowns.ts","Components/MultiSelectField.tsx","Components/NumberField.tsx","Components/FormRow.tsx","Components/SelectField.tsx","Components/FormTextField.tsx","Components/PrimaryButton.tsx","Pages/Workshops/Components/WorkshopForm.tsx","Pages/Workshops/EditWorkshop.tsx","Components/ChipList.tsx","Components/DropdownSingleValue.tsx","Pages/Workshops/Workshop.tsx","Pages/Workshops/Workshops.tsx","Hooks/UseQueryParams.ts","Pages/Workshops/CreateWorkshop.tsx","Pages/Notes/Components/NoteForm.tsx","Pages/Notes/CreateNote.tsx","Pages/Notes/EditNote.tsx","Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NotesContext","React","notes","setNotes","WorkshopsContext","createContext","workshops","setWorkshops","DropdownContext","dropdowns","setDropdowns","backendUrl","oauthEndpoint","adminEndpoint","apiEndpoint","centersEndpoint","dropdownsEndpoint","loginEndpoint","logoutEndpoint","notesEndpoint","tagsEndpoint","workshopsEndpoint","buildEntityEndpoint","entity","axiosInstance","axios","create","defaults","withCredentials","makeRequest","url","a","method","data","headers","endpoint","callback","body","response","request","responseURL","window","location","pathname","replace","console","log","message","fetchData","UseFetchData","HomeButton","styled","Fab","Charts","withRouter","history","notesContext","useContext","UseFetchDataEffect","nbProAccountsData","nbBeneficiariesAccountsData","nbStoredDocsData","forEach","note","index","date","nbProAccounts","nbBeneficiariesAccounts","nbStoredDocs","Container","maxWidth","size","color","aria-label","onClick","push","Typography","variant","component","gutterBottom","colors","StyledContent","div","StyledChipsContainer","StyledListItemContent","ChartsButton","Logout","Button","Admin","Home","useHistory","useState","centers","setCenters","tags","setTags","filteredCenters","setFilteredCenters","map","tag","Chip","key","id","label","name","clickable","filter","center","includes","TextField","onChange","event","search","target","value","toLowerCase","List","dense","ListItem","ListItemIcon","htmlColor","ListItemText","secondary","permanence","style","textAlign","width","workshop","marginLeft","StyledImage","img","StyledImageContainer","StyledForm","form","Login","DropdownsContext","fetchDropdowns","login","values","src","logo","alt","initialValues","email","password","onSubmit","render","props","handleSubmit","type","margin","handleChange","errors","marginTop","marginBottom","fontSize","href","marginRight","getIdFromIri","iri","match","StyledCard","Card","EditNote","StyledChip","Note","CardContent","position","backgroundColor","format","Date","hours","attendees","place","avatar","Avatar","nbPros","nbBeneficiaries","femaleCount","maleCount","noGenderCount","beneficiariesNotes","proNotes","reconnectNotes","LeftTopContent","PaginationContainer","NotesTitle","TopRightIcon","Notes","useNumber","notesCount","notesCountActions","currentPage","currentPageActions","centerId","params","setCenter","fetchNotes","setValue","useEffect","length","beneficiaryCount","createdBeneficiaryCount","documentsCount","Divider","Pagination","count","Math","ceil","page","DatePickerField","utils","DateFnsUtils","disableToolbar","KeyboardButtonProps","flex","getDropdownNameFromIri","dropdown","getDropdownValues","getDropdownOptionsArray","dropdownValues","Object","keys","MultiSelectField","setFieldValue","required","dropdownOptions","options","FormControl","InputLabel","Select","labelId","multiple","input","Input","renderValue","selected","selectedOption","find","option","MenuItem","NumberField","StyledFormRow","FormRow","children","SelectField","FormTextField","rows","multiline","PrimaryButton","disabled","WorkshopForm","useBoolean","loading","loadingActions","allSkills","allSkillsArray","setTrue","setTimeout","setFalse","goBack","datetime","toDateString","nbParticipants","duration","topics","_id","topicIris","skills","newSkills","reduce","accumulator","topicIri","skill","topic","addSkillsSuggestions","onDelete","currentSkill","participantKinds","ageBreakpoints","usedEquipments","equipmentSuppliers","globalReport","improvementAxis","FormControlLabel","control","Checkbox","usedVault","FormGroup","nbCreatedEvents","nbCreatedContacts","nbCreatedNotes","CircularProgress","EditWorkshop","workshopId","useParams","setWorkshop","entityUrl","parseInt","updateWorkshop","ChipList","list","dropdownKind","listItem","DropdownSingleValue","Workshop","topicPrecision","whiteSpace","WorkshopsTitle","Workshops","workshopsCount","workshopsCountActions","pagesCount","pageNumberParam","useLocation","useMemo","URLSearchParams","UseQueryParams","get","pageNumber","changePage","CreateWorkshop","createWorkshop","NoteForm","CreateNote","createNote","noteId","setNote","updateNote","Routes","path","exact","theme","createTheme","palette","background","default","paper","text","primary","main","contrastText","App","ThemeProvider","Provider","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dfbbcbb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2054d5e3.png\";","import * as React from 'react';\nimport { Note } from '../Types/Notes';\n\ninterface NotesContext {\n  notes: Note[];\n  setNotes: (notes: Note[]) => void;\n}\n\nconst defaultValues = {\n  notes: [],\n  setNotes: () => {},\n};\n\nconst NotesContext = React.createContext<NotesContext>(defaultValues);\n\nexport default NotesContext;\n","import { WorkshopInterface } from '../Types/Workshops';\nimport { createContext } from 'react';\n\ninterface WorkshopsContext {\n    workshops: WorkshopInterface[];\n    setWorkshops: (workshops: WorkshopInterface[]) => void;\n}\n\nconst defaultValues = {\n    workshops: [],\n    setWorkshops: () => {},\n};\n\nconst WorkshopsContext = createContext<WorkshopsContext>(defaultValues);\n\nexport default WorkshopsContext;\n","import { createContext } from 'react';\nimport { Dropdowns } from \"../Types/Dropdowns\";\n\ninterface DropdownsContext {\n  dropdowns: Dropdowns;\n  setDropdowns: (dropdowns: Dropdowns) => void;\n}\n\nconst defaultValues = {\n  dropdowns: {},\n  setDropdowns: () => {\n  },\n}\n\nconst DropdownContext = createContext<DropdownsContext>(defaultValues);\n\nexport default DropdownContext;\n","import axios, { AxiosResponse, Method } from 'axios';\nimport { Entity } from '../Types/Entity';\n\nexport const backendUrl =\n  process.env.NODE_ENV === 'production' ? 'https://api.mpp.reconnect.fr' : 'https://localhost:8000';\n\nexport const oauthEndpoint = `${backendUrl}/oauth/trigger`;\nexport const adminEndpoint = `${backendUrl}/admin`;\nexport const apiEndpoint = `${backendUrl}/api`;\nexport const centersEndpoint = `${apiEndpoint}/centers`;\nexport const dropdownsEndpoint = `${apiEndpoint}/dropdowns`;\nexport const loginEndpoint = `${backendUrl}/login`;\nexport const logoutEndpoint = `${backendUrl}/logout`;\nexport const notesEndpoint = `${apiEndpoint}/notes`;\nexport const tagsEndpoint = `${apiEndpoint}/tags`;\nexport const workshopsEndpoint = `${apiEndpoint}/workshops`;\n\nexport const paginationCount = 30;\n\nexport const buildEntityEndpoint = (entity: Entity) => `${backendUrl}${entity['@id']}`;\n\nconst axiosInstance = axios.create();\naxiosInstance.defaults.withCredentials = true\n\nexport const makeRequest = async (url: string, method: Method = 'get', data: Object = {}): Promise<AxiosResponse> =>\n  axiosInstance({method, url, headers: {}, data});\n","import { Method } from 'axios';\nimport * as React from 'react';\nimport { loginEndpoint, makeRequest } from '../Services/requests';\n\nexport default (endpoint: string, callback: Function = () => {}, method: Method = 'GET') => React.useCallback(async (body: Object = {}) => {\n  try {\n    const response = await makeRequest(endpoint, method, body);\n    if (null !== callback) {\n      callback(response.data);\n    }\n    if (response.request.responseURL === loginEndpoint && window.location.pathname !== '/login') {\n      window.location.replace('login');\n    }\n  } catch (e) {\n    console.log('Error making http call', endpoint, e.message);\n  }\n}, [endpoint]);\n","import { Method } from 'axios';\nimport * as React from 'react';\nimport UseFetchData from './UseFetchData';\n\nexport default (endpoint: string, callback: Function = () => {}, method: Method = 'GET') => {\n  const fetchData = UseFetchData(endpoint, callback, method);\n\n  return React.useEffect((data: Object = {}) => {\n    fetchData(data);\n  }, [endpoint]);\n}\n","import { Fab, Typography } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport \"chart.js\";\nimport React, { useContext } from \"react\";\nimport { LineChart } from \"react-chartkick\";\nimport { withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport NotesContext from \"../Context/NotesContext\";\nimport { notesEndpoint } from \"../Services/requests\";\nimport UseFetchDataEffect from \"../Hooks/UseFetchDataEffect\";\n\nconst HomeButton = styled(Fab)`\n  position: absolute !important;\n  right: 10px;\n  top: 10px;\n`;\n\nconst Charts = withRouter(({history}: any) => {\n  const notesContext = useContext(NotesContext);\n\n  UseFetchDataEffect(`${notesEndpoint}`, (data: any) => {\n    notesContext.setNotes(data['hydra:member']);\n  })\n\n  let nbProAccountsData = {};\n  let nbBeneficiariesAccountsData = {};\n  let nbStoredDocsData = {};\n\n  notesContext.notes.forEach((note: any, index: number) => {\n    nbProAccountsData = {\n      ...nbProAccountsData,\n      [note.date]: note.nbProAccounts\n    };\n    nbBeneficiariesAccountsData = {\n      ...nbBeneficiariesAccountsData,\n      [note.date]: note.nbBeneficiariesAccounts\n    };\n    nbStoredDocsData = {...nbStoredDocsData, [note.date]: note.nbStoredDocs};\n  });\n\n  return (\n    <Container maxWidth=\"sm\">\n      <HomeButton\n        size=\"small\"\n        color=\"primary\"\n        aria-label=\"add\"\n        onClick={() => history.push(\"\")}\n      >\n        <HomeIcon/>\n      </HomeButton>\n      <Typography\n        variant=\"h3\"\n        component=\"h2\"\n        gutterBottom\n        color=\"textPrimary\"\n      >\n        Statistiques\n      </Typography>\n      <Typography variant=\"h5\" gutterBottom color=\"textPrimary\">\n        Nombre de comptes bénéficiaires crées par permanence\n      </Typography>\n      <LineChart data={nbBeneficiariesAccountsData} colors={[\"white\"]}/>\n      <Typography variant=\"h5\" gutterBottom color=\"textPrimary\">\n        Nombre de comptes pros crées par permanence\n      </Typography>\n      <LineChart data={nbProAccountsData} colors={[\"#d35400\"]}/>\n      <Typography variant=\"h5\" gutterBottom color=\"textPrimary\">\n        Nombre de documents stockés par permanence\n      </Typography>\n      <LineChart data={nbStoredDocsData} colors={[\"#8e44ad\"]}/>\n    </Container>\n  );\n});\n\nexport default Charts;\n","import {\n  Button,\n  Chip,\n  Fab,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport ChartIcon from \"@material-ui/icons/BarChart\";\nimport HotelIcon from \"@material-ui/icons/House\";\nimport PeopleIcon from \"@material-ui/icons/PeopleAlt\";\nimport HomeWorkIcon from \"@material-ui/icons/Work\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport UseFetchDataEffect from \"../Hooks/UseFetchDataEffect\";\nimport { adminEndpoint, centersEndpoint, logoutEndpoint, makeRequest, tagsEndpoint } from \"../Services/requests\";\n\nconst StyledContent = styled.div`\n  padding-top: 50px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledChipsContainer = styled.div`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  justify-content: space-around;\n`;\n\n\nconst StyledListItemContent = styled.a`\n  background-color: #212121;\n  color: white;\n  cursor: pointer;\n  border-radius: 12px;\n  padding: 10px;\n`;\n\nconst ChartsButton = styled(Fab)`\n  position: absolute !important;\n  right: 10px;\n  top: 10px;\n`;\n\nconst Logout = styled(Button)`\n  position: absolute !important;\n  right: 100px;\n  top: 10px;\n`;\n\nconst Admin = styled(Button)`\n  position: absolute !important;\n  left: 50px;\n  top: 10px;\n`;\n\nconst Home = () => {\n  const history = useHistory();\n  const [centers, setCenters] = useState<any[]>([]);\n  const [tags, setTags] = useState<any[]>([]);\n  const [filteredCenters, setFilteredCenters] = useState<any[]>([]);\n\n  UseFetchDataEffect(centersEndpoint, (centers: any) => {\n    setCenters(centers['hydra:member']);\n    setFilteredCenters(centers['hydra:member'])\n  });\n  UseFetchDataEffect(tagsEndpoint, (data: any) => setTags(data['hydra:member']));\n\n  const searchCenters = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const search = event.target.value;\n    setFilteredCenters(centers.filter((center: any) =>\n      center.name.toLowerCase().includes(search.toLowerCase())\n    ));\n  }\n\n  const onClickTag = (id: number) => {\n    setFilteredCenters(centers.filter((center) =>\n      center.tags.includes(`/api/tags/${id}`)\n    ))\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <StyledContent>\n        <Logout onClick={async () => {\n          await makeRequest(logoutEndpoint);\n          window.location.replace(`/`);\n        }}>\n          Déconnexion\n        </Logout>\n        <Admin\n          onClick={() => {\n            window.location.replace(adminEndpoint);\n          }}\n        >\n          Admin\n        </Admin>\n        <ChartsButton size=\"small\" color=\"primary\" aria-label=\"add\" onClick={() => history.push(\"/charts\")}>\n          <ChartIcon/>\n        </ChartsButton>\n        <Typography variant=\"h2\" component=\"h2\" gutterBottom color=\"textPrimary\">\n          Centres\n        </Typography>\n        <StyledChipsContainer>\n          {!tags ? null : tags.map((tag: any) => (\n            <Chip key={tag.id} label={tag.name} clickable color=\"secondary\" onClick={() => onClickTag(tag.id)}/>\n          ))}\n        </StyledChipsContainer>\n        <TextField id=\"outlined-basic\" label=\"Rechercher\" variant=\"outlined\" onChange={searchCenters}/>\n        <List dense={false}>\n          {!filteredCenters ? null : filteredCenters.map((center: any) => (\n            <ListItem key={center.id}>\n              <ListItemIcon>\n                <HotelIcon htmlColor=\"white\"/>\n              </ListItemIcon>\n              <ListItemText secondary={center.name}/>\n              {!center.permanence ? null :\n                <StyledListItemContent style={{\n                  textAlign: 'center',\n                  width: 200,\n                }} onClick={() => history.push(`/centers/${center.id}/notes`)}>\n                  <PeopleIcon htmlColor=\"white\"/>\n                  <ListItemText secondary=\"Permanences Coffre-fort numérique\"/>\n                </StyledListItemContent>\n              }\n              {!center.workshop ? null :\n                <StyledListItemContent style={{\n                  marginLeft: 8,\n                  textAlign: 'center',\n                  width: 200,\n                }} onClick={() => history.push(`/centers/${center.id}/workshops`)}>\n                  <HomeWorkIcon htmlColor=\"white\"/>\n                  <ListItemText secondary=\"Accompagnements numérique (individuel ou collectif)\"/>\n                </StyledListItemContent>\n              }\n            </ListItem>\n          ))}\n        </List>\n      </StyledContent>\n    </Container>\n  );\n};\n\nexport default Home;\n","import Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport LinkIcon from '@material-ui/icons/Link';\nimport { Formik, FormikProps } from 'formik';\nimport * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { dropdownsEndpoint, loginEndpoint, makeRequest, oauthEndpoint } from '../Services/requests';\nimport logo from '../Images/logo.png';\nimport { Typography } from '@material-ui/core';\nimport UseFetchData from '../Hooks/UseFetchData';\nimport { useContext } from 'react';\nimport DropdownsContext from '../Context/DropdownsContext';\n\nconst StyledImage = styled.img`\n  width: 140px;\n  height: 140px;\n  align-self: center;\n`;\n\nconst StyledImageContainer = styled.div`\n  padding-top: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledForm = styled.form`\n  padding-top: 100px;\n  margin-bottom: 200px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Login: React.FC = () => {\n  const history = useHistory();\n  const {dropdowns, setDropdowns} = useContext(DropdownsContext);\n  const fetchDropdowns = UseFetchData(dropdownsEndpoint, setDropdowns);\n\n  const login = async (values: Object) => {\n    await makeRequest(loginEndpoint, \"POST\", values);\n    await fetchDropdowns();\n    history.push(\"/\");\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <StyledImageContainer>\n        <Typography\n          variant=\"h3\"\n          component=\"h2\"\n          gutterBottom\n          color=\"textPrimary\"\n        >\n          Ma petite permanence\n        </Typography>\n        <StyledImage src={logo} alt=\"logo\"/>\n      </StyledImageContainer>\n      <Formik\n        initialValues={{email: \"\", password: \"\"}}\n        onSubmit={login}\n        render={(props: FormikProps<any>) => (\n          <StyledForm onSubmit={props.handleSubmit}>\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={props.handleChange}\n            />\n            {props.errors.email && (\n              <div id=\"feedback\">{props.errors.email}</div>\n            )}\n            <TextField\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={props.handleChange}\n            />\n            {props.errors.password && (\n              <div id=\"feedback\">{props.errors.password}</div>\n            )}\n            <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n              Login\n            </Button>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              style={{marginTop: 50, marginBottom: 100, fontSize: 20}}\n              href={oauthEndpoint}\n            >\n              <LinkIcon style={{marginRight: 20}}/>\n              Me connecter avec Reconnect Pro\n            </Button>\n          </StyledForm>\n        )}\n      />\n    </Container>\n  );\n};\n\nexport default Login;\n","export function getIdFromIri(iri: string) {\n  return iri.match(/\\d+/);\n}\n","import { Avatar, Card, CardContent, Chip, Fab, Typography } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { format } from 'date-fns';\nimport React from 'react';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { getIdFromIri } from '../../Services/helpers';\nimport ChipList from '../../Components/ChipList';\n\nconst StyledCard = styled(Card)`\n  margin-bottom: 10px;\n`;\n\nconst EditNote = styled(Fab)`\n  position: absolute !important;\n  right: 10px;\n  top: 10px;\n`;\n\nconst StyledChip = styled(Chip)`\n  margin: 8px;\n`;\n\nconst Note = withRouter(({note}: any) => {\n  const history = useHistory();\n\n  return (\n    <StyledCard key={note.id} variant={\"outlined\"}>\n      <CardContent style={{position: 'relative', backgroundColor: '#212121'}}>\n        <EditNote\n          size='small'\n          color='primary'\n          aria-label='add'\n          onClick={() => history.push(`/note/${getIdFromIri(note['@id'])}/edit`)}\n        >\n          <EditIcon/>\n        </EditNote>\n        <Typography color='textPrimary' gutterBottom>\n          Date : {format(new Date(note.date), 'dd-MM-yyyy')}\n        </Typography>\n        <Typography variant='body2' component='p'>\n          Durée : {note.hours} h\n        </Typography>\n        {!note.attendees ? null : (\n          <Typography variant='body2' component='p'>\n            Participants : {note.attendees}\n          </Typography>\n        )}\n        {!note.place ? null : (\n          <Typography variant='body2' component='p'>\n            Lieu : {note.place}\n          </Typography>\n        )}\n        <StyledChip\n          avatar={<Avatar>{note.nbPros}</Avatar>}\n          label='Professionnels rencontrés'\n        />\n        <StyledChip\n          avatar={<Avatar>{note.nbProAccounts}</Avatar>}\n          label='Comptes pro crées'\n        />\n        <StyledChip\n          avatar={<Avatar>{note.nbBeneficiaries}</Avatar>}\n          label='Bénéficiaires rencontrés'\n        />\n        <StyledChip\n          avatar={<Avatar>{note.nbBeneficiariesAccounts}</Avatar>}\n          label='Comptes bénéficiaires crées'\n        />\n        <StyledChip avatar={<Avatar>{note.nbStoredDocs}</Avatar>} label='Documents stockés'/>\n        <Typography variant=\"subtitle1\">\n          Genres :\n        </Typography>\n        <Typography variant=\"body2\">\n          [ Femmes : {note.femaleCount} ] [ Hommes : {note.maleCount} ] [ Autres : {note.noGenderCount} ]\n        </Typography>\n        <br/>\n        <Typography variant='subtitle1'>Remarques concernant les bénéficiaires :</Typography>\n        <Typography variant='body2' component='p'>\n          {note.beneficiariesNotes}\n        </Typography>\n        <br/>\n        <Typography variant='subtitle1'>Remarques concernant les professionnels :</Typography>\n        <Typography variant='body2' component='p'>\n          {note.proNotes}\n        </Typography>\n        <br/>\n        <Typography variant='subtitle1'>Remarques concernant Reconnect :</Typography>\n        <Typography variant='body2' component='p'>\n          {note.reconnectNotes}\n        </Typography>\n      </CardContent>\n    </StyledCard>\n  );\n});\n\nexport default Note;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { useHistory } from 'react-router-dom';\n\nexport const HomeButton = () => {\n  const history = useHistory();\n\n  return (\n    <Button\n      onClick={() => history.push(`/`)}\n    >\n      <HomeIcon/>Accueil\n    </Button>\n  )\n}\n\nexport default HomeButton;\n","import {\n  Container,\n  Divider,\n  Fab,\n  Typography\n} from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport AddIcon from '@material-ui/icons/Add';\nimport React, { useContext } from 'react';\nimport { useNumber } from 'react-hanger/array';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport NotesContext from '../../Context/NotesContext';\nimport { centersEndpoint, notesEndpoint, paginationCount } from '../../Services/requests';\nimport Note from './Note';\nimport UseFetchDataEffect from '../../Hooks/UseFetchDataEffect';\nimport UseFetchData from '../../Hooks/UseFetchData';\nimport { Center } from '../../Types/Center';\nimport HomeButton from '../../Components/HomeButton';\n\nconst StyledContent = styled.div`\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  color: whitesmoke;\n`;\n\nconst LeftTopContent = styled.div`\n  position: absolute;\n  left: 140px;\n  top: 10px;\n`;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 32px;\n  margin-bottom: 32px;\n`;\n\nconst NotesTitle = styled(Typography)`\n  flex: 1;\n`;\n\nconst TopRightIcon = styled(Fab)`\n  position: absolute;\n  right: 0;\n`;\n\nconst Notes = withRouter(({history, match}: any) => {\n  const [notesCount, notesCountActions] = useNumber(0);\n  const [currentPage, currentPageActions] = useNumber(1);\n  const {centerId} = match.params;\n  const {notes, setNotes} = useContext(NotesContext);\n  const [center, setCenter] = React.useState<Center>({});\n\n  UseFetchDataEffect(`${centersEndpoint}/${centerId}`, setCenter);\n  const fetchNotes = UseFetchData(`${notesEndpoint}?center=${centerId}&page=${currentPage}`, (data: any) => {\n    notesCountActions.setValue(data['hydra:totalItems'])\n    setNotes(data['hydra:member']);\n  });\n\n  React.useEffect(() => {\n    fetchNotes();\n  }, [fetchNotes])\n\n  return (\n    <Container maxWidth='sm'>\n      <LeftTopContent>\n        <HomeButton/>\n      </LeftTopContent>\n      <StyledContent>\n        {!center ? null : (\n          <>\n            <NotesTitle variant='h4' gutterBottom color='textPrimary'>\n              {center.name}\n            </NotesTitle>\n            <Typography>Nb permanences: {!center.notes ? 0 : center.notes.length}</Typography>\n            <Typography>Nb bénef rencontrés: {center.beneficiaryCount}</Typography>\n            <Typography>Nb CFN crées: {center.createdBeneficiaryCount}</Typography>\n            <Typography>Nb docs stockés: {center.documentsCount}</Typography>\n          </>\n        )}\n        <br/>\n        <Divider/>\n        <NotesTitle variant='h4' gutterBottom color='textPrimary'>\n          Permanences CFN\n        </NotesTitle>\n        {center === null ? null : (\n          <TopRightIcon\n            size='medium'\n            color='primary'\n            aria-label='add'\n            onClick={() => history.push(`/centers/${center.id}/create-note`)}\n          >\n            <AddIcon/>\n          </TopRightIcon>\n        )}\n        <PaginationContainer>\n          <Pagination\n            count={Math.ceil(notesCount / paginationCount)}\n            variant=\"outlined\"\n            page={currentPage}\n            onChange={(event: any, value: any) => currentPageActions.setValue(value)}\n          />\n        </PaginationContainer>\n        {notes.map((note: any) => (\n          <Note note={note} key={note.id}/>\n        ))}\n      </StyledContent>\n    </Container>\n  );\n});\n\nexport default Notes;\n","import DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport React from 'react';\n\n\nconst DatePickerField = ({label, handleChange, value}: any) => (\n  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <KeyboardDatePicker\n      disableToolbar\n      format='dd/MM/yyyy'\n      margin='normal'\n      id='date-picker-inline'\n      label={label}\n      onChange={handleChange}\n      variant='inline'\n      value={value}\n      KeyboardButtonProps={{\n        'aria-label': 'change date',\n      }}\n      style={{margin: 8, flex: 1}}\n    />\n  </MuiPickersUtilsProvider>\n);\n\nexport default DatePickerField;\n","import { Dropdown, Dropdowns } from \"../Types/Dropdowns\";\n\nexport function getDropdownNameFromIri(dropdown: Dropdown, iri: string) {\n  return dropdown[iri] ? dropdown[iri].name : '';\n}\n\nexport function getDropdownValues(dropdowns: Dropdowns, type: string) {\n  return dropdowns[type] ? dropdowns[type] : {}\n}\n\nexport function getDropdownOptionsArray(dropdowns: Dropdowns, type: string) {\n  const dropdownValues = getDropdownValues(dropdowns, type);\n\n  return Object.keys(dropdownValues).map((iri: string) => ({\n    ...dropdownValues[iri], '@id': iri,\n  }));\n}\n","import Chip from '@material-ui/core/Chip';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport React, { useContext } from 'react';\nimport DropdownsContext from \"../Context/DropdownsContext\";\nimport { getDropdownOptionsArray } from \"../Services/dropdowns\";\n\nconst MultiSelectField = ({id, label, value, setFieldValue, required= false}: any) => {\n  const {dropdowns} = useContext(DropdownsContext);\n  const dropdownOptions = getDropdownOptionsArray(dropdowns, id);\n  const options = !dropdownOptions ? [] : dropdownOptions;\n\n  return (\n    <FormControl style={{marginLeft: 8, marginRight: 8, flex: 1}}>\n      <InputLabel id={id}>{label}</InputLabel>\n      <Select\n        labelId={id}\n        id={id}\n        multiple\n        value={!value ? [] : value}\n        required={required}\n        onChange={(event) => {\n          setFieldValue(id, event.target.value);\n        }}\n        input={<Input id={id}/>}\n        renderValue={(selected: any) => (\n          <div>\n            {selected.map((value: any) => {\n              const selectedOption = options.find((option: any) => {\n                return option['@id'] === value;\n              });\n\n              return (\n                <Chip key={value} label={!selectedOption ? '' : selectedOption.name}/>\n              );\n            })}\n          </div>\n        )}\n      >\n        {options.map((option: any) => (\n          <MenuItem key={option['@id']} value={option['@id']}>\n            {option.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default MultiSelectField;\n","import TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\nconst NumberField = ({id, label, handleChange, value, required= false}: any) => (\n    <TextField\n        id={id}\n        label={label}\n        name={id}\n        onChange={handleChange}\n        type='number'\n        variant='outlined'\n        style={{marginLeft: 8, marginRight: 8, flex: 1}}\n        value={value}\n        required={required}\n    />\n);\n\nexport default NumberField;\n","import React from 'react';\nimport styled from \"styled-components\";\n\ninterface FormRowProps {\n  children: React.ReactNode;\n}\n\nconst StyledFormRow = styled.div`\n  display: flex;\n  margin-top: 16px;\n`;\n\nconst FormRow: React.FC<FormRowProps> = ({children}) => {\n  return <StyledFormRow>{children}</StyledFormRow>\n}\n\nexport default FormRow;\n","import React, { useContext } from 'react';\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport DropdownsContext from '../Context/DropdownsContext';\nimport { getDropdownOptionsArray } from '../Services/dropdowns';\n\nconst SelectField = ({id, label, value, setFieldValue, required}: any) => {\n  const {dropdowns} = useContext(DropdownsContext);\n  const dropdownOptions = getDropdownOptionsArray(dropdowns, `${id}s`);\n  const options = !dropdownOptions ? [] : dropdownOptions;\n\n  return (\n    <FormControl style={{flex: 1, margin: 8}}>\n      <InputLabel id={id}>{label}</InputLabel>\n      <Select\n        labelId={id}\n        id={id}\n        value={!value ? [] : value}\n        required={required}\n        onChange={(event) => {\n          setFieldValue(id, event.target.value);\n        }}\n      >\n        {options.map((option: any) => (\n          <MenuItem key={option['@id']} value={option['@id']}>\n            {option.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default SelectField;\n","import TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\nconst FormTextField = ({id, label, value, handleChange, rows, multiline= false, required= false}: any) => (\n  <TextField\n    id={id}\n    name={id}\n    type='text'\n    label={label}\n    variant='outlined'\n    value={value}\n    onChange={handleChange}\n    rows={rows}\n    multiline={multiline}\n    required={required}\n    style={{marginLeft: 8, marginRight: 8, flex: 1}}\n  />\n)\n\nexport default FormTextField;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nconst PrimaryButton = (props: any) => (\n  <Button\n    variant='contained'\n    color='primary'\n    type='submit'\n    disabled={props.disabled}\n    style={{margin: 8, flex: 1}}\n  >\n    {props.children}\n  </Button>\n)\n\nexport default PrimaryButton;\n","import { Checkbox, Chip, FormControlLabel, FormGroup } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Formik, FormikProps } from 'formik';\nimport React, { useContext } from 'react';\nimport DatePickerField from '../../../Components/DatePickerField';\nimport MultiSelectField from '../../../Components/MultiSelectField';\nimport NumberField from '../../../Components/NumberField';\nimport { WorkshopInterface } from '../../../Types/Workshops';\nimport { useBoolean } from 'react-hanger/array';\nimport DropdownsContext from '../../../Context/DropdownsContext';\nimport { getDropdownNameFromIri, getDropdownOptionsArray, getDropdownValues } from '../../../Services/dropdowns';\nimport FormRow from '../../../Components/FormRow';\nimport { useHistory } from 'react-router-dom';\nimport SelectField from '../../../Components/SelectField';\nimport FormTextField from '../../../Components/FormTextField';\nimport PrimaryButton from '../../../Components/PrimaryButton';\n\ninterface WorkshopFormProps {\n  workshop: WorkshopInterface;\n  onSubmit: Function;\n}\n\nconst WorkshopForm: React.FC<WorkshopFormProps> = ({workshop, onSubmit}) => {\n  const history = useHistory();\n  const [loading, loadingActions] = useBoolean(false);\n  const {dropdowns} = useContext(DropdownsContext);\n  const allSkills = getDropdownValues(dropdowns, 'skills');\n  const allSkillsArray = getDropdownOptionsArray(dropdowns, 'skills');\n\n  const addSkillsSuggestions = (skills: string[], topicIris: string[]) => {\n    const newSkills = skills;\n    topicIris.reduce((accumulator: any, topicIri: string) => ([\n        ...accumulator, ...allSkillsArray.filter((skill: any) => skill['topic']['@id'] === topicIri)]\n    ), []).forEach((topic: any) => {\n      if (!newSkills.includes(topic['@id'])) {\n        newSkills.push(topic['@id']);\n      }\n    });\n\n    return newSkills;\n  }\n\n  return (\n    <Formik\n      initialValues={workshop}\n      onSubmit={async (data) => {\n        loadingActions.setTrue();\n        await onSubmit(data);\n        setTimeout(() => {\n          loadingActions.setFalse();\n          history.goBack();\n        }, 500);\n      }}\n      render={({handleChange, handleSubmit, values, setFieldValue}: FormikProps<any>) => (\n        <form onSubmit={handleSubmit}>\n          <FormRow>\n            <DatePickerField\n              label=\"Date\"\n              handleChange={(datetime: Date) => {\n                setFieldValue('date', datetime.toDateString())\n              }}\n              value={values.date}\n            />\n            <NumberField\n              id='nbParticipants'\n              value={values.nbParticipants}\n              label=\"Nombre de participants\"\n              handleChange={handleChange}\n              required={true}\n            />\n          </FormRow>\n          <FormRow>\n            <NumberField\n              id='femaleCount'\n              value={values.femaleCount}\n              label=\"nb Femmes\"\n              handleChange={handleChange}\n              required={true}\n            />\n            <NumberField\n              id='maleCount'\n              value={values.maleCount}\n              label=\"nb Hommes\"\n              handleChange={handleChange}\n              required={true}\n            />\n            <NumberField\n              id='noGenderCount'\n              value={values.noGenderCount}\n              label=\"nb Autres\"\n              handleChange={handleChange}\n              required={true}\n            />\n          </FormRow>\n          <FormRow>\n            <SelectField\n              id='duration'\n              label='Durée'\n              value={values.duration}\n              setFieldValue={setFieldValue}\n              required={true}\n            />\n            <FormTextField\n              id='attendees'\n              value={values.attendees}\n              label=\"Animateur.trice\"\n              required={true}\n              handleChange={handleChange}\n              style={{marginLeft: 8, marginRight: 8, flex: 1}}\n            />\n            <FormTextField\n              id='place'\n              label='Lieu'\n              value={values.place}\n              handleChange={handleChange}\n            />\n          </FormRow>\n          <FormRow>\n            <MultiSelectField\n              id=\"topics\"\n              label=\"Thèmes\"\n              value={values.topics}\n              required={true}\n              setFieldValue={(_id: string, topicIris: string[]) => {\n                setFieldValue('topics', topicIris);\n                setFieldValue('skills', addSkillsSuggestions(values.skills, topicIris));\n              }}\n            />\n          </FormRow>\n          <FormRow>\n            <div>\n              {values.skills.map((skill: string) => (\n                <Chip key={skill} label={getDropdownNameFromIri(allSkills, skill)} variant=\"outlined\" onDelete={() =>\n                  setFieldValue('skills', values.skills.filter((currentSkill: string) => currentSkill !== skill))}\n                />\n              ))}\n            </div>\n          </FormRow>\n          <FormRow>\n            <MultiSelectField\n              id=\"participantKinds\"\n              label=\"Types de participants\"\n              value={values.participantKinds}\n              setFieldValue={setFieldValue}\n            />\n          </FormRow>\n          <FormRow>\n            <MultiSelectField\n              id=\"ageBreakpoints\"\n              label=\"Tranches d'âge\"\n              value={values.ageBreakpoints}\n              setFieldValue={setFieldValue}\n            />\n          </FormRow>\n          <FormRow>\n            <MultiSelectField\n              id=\"usedEquipments\"\n              label=\"Outils utilisés\"\n              value={values.usedEquipments}\n              setFieldValue={setFieldValue}\n            />\n          </FormRow>\n          <FormRow>\n            <MultiSelectField\n              id=\"equipmentSuppliers\"\n              label=\"Équipement fourni par\"\n              value={values.equipmentSuppliers}\n              setFieldValue={setFieldValue}\n            />\n          </FormRow>\n          <FormRow>\n            <FormTextField\n              id='globalReport'\n              value={values.globalReport}\n              label=\"Bilan global\"\n              required={true}\n              multiline\n              rows='4'\n              handleChange={handleChange}\n            />\n          </FormRow>\n          <FormRow>\n            <FormTextField\n              id='improvementAxis'\n              value={values.improvementAxis}\n              label=\"Axes d'amélioration\"\n              multiline={true}\n              rows='4'\n              handleChange={handleChange}\n            />\n          </FormRow>\n          <FormRow>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  style={{marginLeft: 8}}\n                  value={values.usedVault}\n                  onChange={(event, value) => {\n                    setFieldValue('usedVault', value)\n                  }}\n                  color='primary'\n                />\n              } label={<span style={{color: 'white'}}>Coffre-fort numérique</span>}/>\n          </FormRow>\n          {!values.usedVault ? null : (\n            <FormGroup>\n              <FormRow>\n                <NumberField id=\"nbBeneficiariesAccounts\" value={values.nbBeneficiariesAccounts}\n                             label=\"Nombre de cfn crées\"\n                             handleChange={handleChange}/>\n                <NumberField id=\"nbStoredDocs\" value={values.nbStoredDocs} label=\"Nombre de documents stockés\"\n                             handleChange={handleChange}/>\n              </FormRow>\n              <FormRow>\n                <NumberField id=\"nbCreatedEvents\" value={values.nbCreatedEvents} label=\"Évènements ajoutés\"\n                             handleChange={handleChange}/>\n                <NumberField id=\"nbCreatedContacts\" value={values.nbCreatedContacts} label=\"Contacts ajoutés\"\n                             handleChange={handleChange}/>\n                <NumberField id=\"nbCreatedNotes\" value={values.nbCreatedNotes} label=\"Notes ajoutées\"\n                             handleChange={handleChange}/>\n              </FormRow>\n            </FormGroup>\n          )}\n          <FormRow>\n            {loading\n              ? <PrimaryButton disabled={true}><CircularProgress size={20}/></PrimaryButton>\n              : <PrimaryButton>{workshop['@id'] ? \"Mettre à jour\" : \"Créer\"}</PrimaryButton>\n            }\n          </FormRow>\n        </form>\n      )}\n    />\n  );\n}\n\nexport default WorkshopForm;\n","import Container from '@material-ui/core/Container';\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UseFetchDataEffect from '../../Hooks/UseFetchDataEffect';\nimport { buildEntityEndpoint, workshopsEndpoint } from '../../Services/requests';\nimport { WorkshopInterface } from '../../Types/Workshops';\nimport WorkshopForm from './Components/WorkshopForm';\nimport UseFetchData from '../../Hooks/UseFetchData';\n\nconst EditWorkshop = () => {\n  const {workshopId} = useParams();\n  const [workshop, setWorkshop] = useState<WorkshopInterface | null>(null);\n  const entityUrl = !workshop ? '' : buildEntityEndpoint(workshop);\n\n  UseFetchDataEffect(`${workshopsEndpoint}/${parseInt(workshopId)}`, setWorkshop);\n  const updateWorkshop = UseFetchData(entityUrl, () => {}, 'PUT');\n\n  return (\n    <Container maxWidth='sm'>\n      {null === workshop ? <></> : <WorkshopForm workshop={workshop} onSubmit={updateWorkshop}/>}\n    </Container>\n  )\n}\n\nexport default EditWorkshop;\n","import { Chip } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport DropdownsContext from \"../Context/DropdownsContext\";\nimport { getDropdownNameFromIri, getDropdownValues } from \"../Services/dropdowns\";\n\ninterface ChipListProps {\n  list: string[];\n  dropdownKind?: string;\n}\n\nconst ChipList: React.FC<ChipListProps> = ({list, dropdownKind}) => {\n  const {dropdowns} = useContext(DropdownsContext);\n  const dropdown = !dropdownKind ? {} : getDropdownValues(dropdowns, dropdownKind);\n\n  return (\n    <>\n      {list.map((listItem: string) => (\n        <Chip key={listItem} label={getDropdownNameFromIri(dropdown, listItem)} variant='outlined'/>\n      ))}\n    </>\n  );\n}\n\nexport default ChipList;\n","import React, {useContext} from 'react';\nimport DropdownsContext from '../Context/DropdownsContext';\nimport {getDropdownNameFromIri, getDropdownValues} from '../Services/dropdowns';\n\nconst DropdownSingleValue = ({iri, dropdownKind}: any) => {\n  const {dropdowns} = useContext(DropdownsContext);\n  const dropdown = !dropdownKind ? {} : getDropdownValues(dropdowns, dropdownKind);\n\n  return (\n      <span>{getDropdownNameFromIri(dropdown, iri)}</span>\n  );\n}\n\nexport default DropdownSingleValue;\n","import { Card, CardContent, Fab, Typography } from '@material-ui/core';\nimport { format } from 'date-fns';\nimport React from 'react';\nimport styled from 'styled-components';\nimport ChipList from '../../Components/ChipList';\nimport DropdownSingleValue from '../../Components/DropdownSingleValue';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { getIdFromIri } from '../../Services/helpers';\nimport { useHistory } from 'react-router-dom';\n\nconst StyledCard = styled(Card)`\n  margin-bottom: 10px;\n`;\n\nconst EditWorkshop = styled(Fab)`\n  position: absolute !important;\n  right: 10px;\n  top: 10px;\n`;\n\nconst Workshop = ({workshop}: any) => {\n  const history = useHistory();\n\n  return (\n    <StyledCard variant=\"outlined\" >\n      <CardContent style={{position: 'relative', backgroundColor: '#212121'}}>\n        <EditWorkshop\n          size='small'\n          color='primary'\n          aria-label='add'\n          onClick={() => history.push(`/workshop/${getIdFromIri(workshop['@id'])}/edit`)}\n        >\n          <EditIcon/>\n        </EditWorkshop>\n        <Typography color='textPrimary' gutterBottom>\n          Date : {format(new Date(workshop.date), 'dd-MM-yyyy')}\n        </Typography>\n        <Typography>\n          Lieu : {workshop.place}\n        </Typography>\n        <Typography>\n          Animateur.trice : {workshop.attendees}\n        </Typography>\n        <Typography>\n          Durée : <DropdownSingleValue iri={workshop.duration} dropdownKind=\"durations\"/> minutes\n        </Typography>\n        <Typography>\n          Nombre de participants : {workshop.nbParticipants}\n        </Typography>\n        <Typography variant=\"body2\">\n          Genres : [ Femmes : {workshop.femaleCount} ] [ Hommes : {workshop.maleCount} ] [ Autres : {workshop.noGenderCount} ]\n        </Typography>\n        <br/>\n        <div>\n          Thèmes : <ChipList list={workshop.topics} dropdownKind=\"topics\"/>\n        </div>\n        {!workshop.topicPrecision ? null : (\n          <Typography variant='body2' component='p'>\n            Précisions sur le thème : {workshop.topicPrecision}\n          </Typography>\n        )}\n        <div>\n          Compétences : <ChipList list={workshop.skills} dropdownKind=\"skills\"/>\n        </div>\n        <div>\n          Types de participants : <ChipList list={workshop.participantKinds} dropdownKind=\"participantKinds\"/>\n        </div>\n        <div>\n          Tranches d'âge : <ChipList list={workshop.ageBreakpoints} dropdownKind=\"ageBreakpoints\"/>\n        </div>\n        <div>\n          Outils utilisés : <ChipList list={workshop.usedEquipments} dropdownKind=\"usedEquipments\"/>\n        </div>\n        <div>\n          Equipement fourni par : <ChipList list={workshop.equipmentSuppliers} dropdownKind=\"equipmentSuppliers\"/>\n        </div>\n        <br/>\n        <Typography variant=\"subtitle1\">\n          Bilan global :\n        </Typography>\n        <Typography variant=\"body2\" style={{whiteSpace: \"pre-line\"}}>\n          {workshop.globalReport}\n        </Typography>\n        <br/>\n        <Typography variant=\"subtitle1\">\n          Axes d'amélioration :\n        </Typography>\n        <Typography variant=\"body2\" style={{whiteSpace: \"pre-line\"}}>\n          {workshop.improvementAxis}\n        </Typography>\n        {!workshop.usedVault ? null : (\n          <div>\n            <br/>\n            <Typography>\n              Coffre-fort numérique :\n            </Typography>\n            <Typography variant='body2' component='p'>\n              - Nb CFN créés : {workshop.nbBeneficiariesAccounts}\n            </Typography>\n            <Typography variant='body2' component='p'>\n              - Nb documents : {workshop.nbStoredDocs}\n            </Typography>\n            <Typography variant='body2' component='p'>\n              - Nb rappels : {workshop.nbCreatedEvents}\n            </Typography>\n            <Typography variant='body2' component='p'>\n              - Nb contacts : {workshop.nbCreatedContacts}\n            </Typography>\n            <Typography variant='body2' component='p'>\n              - Nb notes : {workshop.nbCreatedNotes}\n            </Typography>\n          </div>\n        )}\n      </CardContent>\n    </StyledCard>\n  );\n}\n\nexport default Workshop;\n","import { Container, Divider, Fab, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Pagination from '@material-ui/lab/Pagination';\nimport React, { useContext } from 'react';\nimport { useNumber } from 'react-hanger/array';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport WorkshopsContext from '../../Context/WorkshopsContext';\nimport UseFetchDataEffect from '../../Hooks/UseFetchDataEffect';\nimport UseQueryParams from '../../Hooks/UseQueryParams';\nimport { centersEndpoint, paginationCount, workshopsEndpoint } from '../../Services/requests';\nimport { Center } from '../../Types/Center';\nimport Workshop from './Workshop';\nimport HomeButton from '../../Components/HomeButton';\n\nconst StyledContent = styled.div`\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  color: whitesmoke;\n`;\n\nconst LeftTopContent = styled.div`\n  position: absolute;\n  left: 140px;\n  top: 10px;\n`;\n\nconst WorkshopsTitle = styled(Typography)`\n  flex: 1;\n`;\n\nconst TopRightIcon = styled(Fab)`\n  position: absolute;\n  right: 0;\n`;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 32px;\n  margin-bottom: 32px;\n`;\n\nconst Workshops = () => {\n  const [center, setCenter] = React.useState<Center | null>(null);\n  const history = useHistory();\n  const {centerId} = useParams();\n  const {workshops, setWorkshops} = useContext(WorkshopsContext);\n  const [workshopsCount, workshopsCountActions] = useNumber(0);\n  const pagesCount = Math.ceil(workshopsCount / paginationCount);\n  const pageNumberParam = UseQueryParams().get('page');\n  const pageNumber = null === pageNumberParam ? 1 : pageNumberParam;\n\n  UseFetchDataEffect((`${centersEndpoint}/${centerId}`), setCenter);\n  UseFetchDataEffect((`${workshopsEndpoint}?center=${centerId}&page=${pageNumber}`), (data: any) => {\n    setWorkshops(data['hydra:member']);\n    workshopsCountActions.setValue(data['hydra:totalItems'])\n  });\n\n  const changePage = async (event: any, value: any) => {\n    history.push(`/centers/${centerId}/workshops?page=${null === value ? '1' : value}`)\n  }\n\n  return (\n    <Container maxWidth='sm'>\n      <LeftTopContent>\n        <HomeButton/>\n      </LeftTopContent>\n      {center === null ? null : (\n        <StyledContent>\n          <WorkshopsTitle variant='h4' gutterBottom color='textPrimary'>\n            {center.name}\n          </WorkshopsTitle>\n          <Typography>Nb d'ateliers : {!center.workshops ? 0 : center.workshops.length}</Typography>\n          <Typography>Nb CFN crées : {!center.createdBeneficiaryCount ? 0 : center.createdBeneficiaryCount}</Typography>\n          <Typography>Nb docs stockés : {!center.documentsCount ? 0 : center.documentsCount}</Typography>\n        </StyledContent>\n      )}\n      <Divider/>\n      <WorkshopsTitle variant='h4' gutterBottom color='textPrimary'>\n        Accompagnements numérique\n      </WorkshopsTitle>\n      {center === null ? null : (\n        <TopRightIcon\n          size='medium'\n          color='primary'\n          aria-label='add'\n          onClick={() => history.push(`/centers/${center.id}/create-workshop`)}\n        >\n          <AddIcon/>\n        </TopRightIcon>\n      )}\n      <PaginationContainer>\n        <Pagination\n          count={pagesCount}\n          variant=\"outlined\"\n          page={parseInt(pageNumber as string)} onChange={changePage}\n        />\n      </PaginationContainer>\n      {workshops.map((workshop: any) => (\n        <Workshop key={workshop['@id']} workshop={workshop}/>\n      ))}\n    </Container>\n  );\n};\n\nexport default Workshops;\n","import {useLocation} from 'react-router-dom';\nimport React from 'react';\n\nexport default () => {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import Container from '@material-ui/core/Container';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { centersEndpoint, workshopsEndpoint } from '../../Services/requests';\nimport WorkshopForm from './Components/WorkshopForm';\nimport UseFetchData from '../../Hooks/UseFetchData';\n\nconst CreateWorkshop = () => {\n  const {centerId} = useParams();\n  const workshop = {\n    center: `${centersEndpoint}/${centerId}`,\n    date: new Date(),\n    skills: [],\n    nbBeneficiariesAccounts: 0,\n    nbStoredDocs: 0,\n    nbCreatedEvents: 0,\n    nbCreatedContacts: 0,\n    nbCreatedNotes: 0,\n  }\n  const createWorkshop = UseFetchData(workshopsEndpoint, () => {\n  }, 'POST');\n\n  return (\n    <Container maxWidth='sm'>\n      <WorkshopForm workshop={workshop} onSubmit={createWorkshop}/>\n    </Container>\n  )\n}\n\nexport default CreateWorkshop;\n","import React from 'react';\nimport { Formik, FormikProps } from 'formik';\nimport { useHistory } from 'react-router-dom';\nimport { useBoolean } from 'react-hanger/array';\nimport DatePickerField from '../../../Components/DatePickerField';\nimport FormRow from '../../../Components/FormRow';\nimport NumberField from '../../../Components/NumberField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormTextField from '../../../Components/FormTextField';\nimport PrimaryButton from '../../../Components/PrimaryButton';\nimport MultiSelectField from '../../../Components/MultiSelectField';\n\nconst NoteForm = ({note, onSubmit}: any) => {\n  const history = useHistory();\n  const [loading, loadingActions] = useBoolean(false);\n\n  return (\n    <Formik\n      initialValues={note}\n      onSubmit={async (data) => {\n        loadingActions.setTrue();\n        await onSubmit(data);\n        setTimeout(() => {\n          loadingActions.setFalse();\n          history.goBack();\n        }, 500);\n      }}\n      render={({handleChange, handleSubmit, values, setFieldValue}: FormikProps<any>) => (\n        <form onSubmit={handleSubmit}>\n          <FormRow>\n            <DatePickerField label=\"Date\"\n                             handleChange={(datetime: Date) => {\n                               setFieldValue('date', datetime.toDateString())\n                             }}\n                             value={values.date}/>\n            <NumberField id='hours' value={values.hours} label=\"Nombre d'heures\" handleChange={handleChange}/>\n          </FormRow>\n          <FormRow>\n            <NumberField id='nbPros' value={values.nbPros} label=\"Nb pros rencontrés\" handleChange={handleChange}/>\n            <NumberField id='nbProAccounts' value={values.nbProAccounts} label=\"Nb comptes pros créés\"\n                         handleChange={handleChange}/>\n          </FormRow>\n          <FormRow>\n            <NumberField id='nbBeneficiaries' value={values.nbBeneficiaries} label=\"Nb benef rencontrés\"\n                         handleChange={handleChange}/>\n            <NumberField id='nbBeneficiariesAccounts' value={values.nbBeneficiariesAccounts}\n                         label=\"Nb comptes benef créés\" handleChange={handleChange}/>\n            <NumberField id='nbStoredDocs' value={values.nbStoredDocs} label=\"Nb doc stockés\"\n                         handleChange={handleChange}/>\n          </FormRow>\n          <FormRow>\n            <NumberField\n              id='femaleCount'\n              value={values.femaleCount}\n              label=\"nb Femmes\"\n              handleChange={handleChange}\n              required={true}\n            />\n            <NumberField\n              id='maleCount'\n              value={values.maleCount}\n              label=\"nb Hommes\"\n              handleChange={handleChange}\n              required={true}\n            />\n            <NumberField\n              id='noGenderCount'\n              value={values.noGenderCount}\n              label=\"nb Autres\"\n              handleChange={handleChange}\n              required={true}\n            />\n          </FormRow>\n          <FormRow>\n            <FormTextField\n              id='attendees'\n              type='text'\n              label=\"Qui a fait la perm\"\n              value={values.attendees}\n              handleChange={handleChange}\n            />\n          </FormRow>\n          <FormRow>\n            <FormTextField\n              id='place'\n              label='Lieu (optionnel)'\n              value={values.place}\n              handleChange={handleChange}\n            />\n          </FormRow>\n          <FormRow>\n            <FormTextField\n              id='beneficiariesNotes'\n              label='Remarques en rapport avec les bénéficiaires'\n              multiline={true}\n              rows='4'\n              value={values.beneficiariesNotes}\n              handleChange={handleChange}\n            />\n          </FormRow>\n          <FormRow>\n            <FormTextField\n              id='proNotes'\n              label='Remarques en rapport avec les professionnels'\n              multiline={true}\n              rows='4'\n              value={values.proNotes}\n              handleChange={handleChange}\n            />\n          </FormRow>\n          <FormRow>\n            <FormTextField\n              id='reconnectNotes'\n              label='Remarques en rapport avec Reconnect'\n              multiline={true}\n              rows='4'\n              value={values.reconnectNotes}\n              handleChange={handleChange}\n            />\n          </FormRow>\n          <FormRow>\n            {loading\n              ? <PrimaryButton disabled={true}><CircularProgress size={20}/></PrimaryButton>\n              : <PrimaryButton>{note['@id'] ? \"Mettre à jour\" : \"Créer\"}</PrimaryButton>\n            }\n          </FormRow>\n        </form>\n      )}\n    />\n  );\n}\n\nexport default NoteForm;\n","import React from 'react';\nimport { centersEndpoint, notesEndpoint } from '../../Services/requests';\nimport { useParams } from 'react-router-dom';\nimport UseFetchData from '../../Hooks/UseFetchData';\nimport { Container } from '@material-ui/core';\nimport NoteForm from './Components/NoteForm';\n\nconst CreateNote = () => {\n  const {centerId} = useParams();\n  const note = {\n    center: `${centersEndpoint}/${centerId}`,\n    date: new Date(),\n    hours: 0,\n    attendees: '',\n    place: '',\n    nbPros: 0,\n    nbProAccounts: 0,\n    nbBeneficiaries: 0,\n    nbBeneficiariesAccounts: 0,\n    nbStoredDocs: 0,\n    beneficiariesNotes: '',\n    proNotes: '',\n    reconnectNotes: '',\n  }\n\n  const createNote = UseFetchData(notesEndpoint, () => {}, 'POST');\n\n  return (\n    <Container maxWidth='sm'>\n      <NoteForm note={note} onSubmit={createNote}/>\n    </Container>\n  )\n\n}\n\nexport default CreateNote;\n","import Container from '@material-ui/core/Container';\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UseFetchDataEffect from '../../Hooks/UseFetchDataEffect';\nimport { buildEntityEndpoint, notesEndpoint } from '../../Services/requests';\nimport UseFetchData from '../../Hooks/UseFetchData';\nimport NoteForm from './Components/NoteForm';\n\nconst EditNote = () => {\n  const {noteId} = useParams();\n  const [note, setNote] = useState<any>(null);\n  const entityUrl = !note ? '' : buildEntityEndpoint(note);\n\n  UseFetchDataEffect(`${notesEndpoint}/${parseInt(noteId)}`, setNote);\n  const updateNote = UseFetchData(entityUrl, () => {}, 'PUT');\n\n  return (\n    <Container maxWidth='sm'>\n      {null === note ? <></> : <NoteForm note={note} onSubmit={updateNote}/>}\n    </Container>\n  )\n}\n\nexport default EditNote;\n","import * as React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Charts from './Pages/Charts';\nimport Home from './Pages/Home';\nimport Login from './Pages/Login';\nimport Notes from './Pages/Notes/Notes';\nimport EditWorkshop from './Pages/Workshops/EditWorkshop';\nimport Workshops from './Pages/Workshops/Workshops';\nimport CreateWorkshop from './Pages/Workshops/CreateWorkshop';\nimport CreateNote from './Pages/Notes/CreateNote';\nimport EditNote from './Pages/Notes/EditNote';\n\nconst Routes = () => (\n  <Router>\n    <Route path=\"/\" exact component={Home}/>\n    <Route path=\"/login\" component={Login}/>\n    <Route path=\"/charts\" component={Charts}/>\n    <Route path=\"/centers/:centerId/notes\" component={Notes}/>\n    <Route path=\"/centers/:centerId/create-note\" component={CreateNote}/>\n    <Route path=\"/note/:noteId/edit\" component={EditNote}/>\n    <Route path=\"/centers/:centerId/workshops\" component={Workshops}/>\n    <Route path=\"/workshop/:workshopId/edit\" component={EditWorkshop}/>\n    <Route path=\"/centers/:centerId/create-workshop\" component={CreateWorkshop}/>\n  </Router>\n);\n\nexport default Routes;\n","import { createTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport * as React from 'react';\nimport NotesContext from './Context/NotesContext';\nimport WorkshopsContext from './Context/WorkshopsContext';\nimport DropdownsContext from './Context/DropdownsContext';\nimport Routes from './Routes';\nimport { Note } from './Types/Notes';\nimport { WorkshopInterface } from './Types/Workshops';\nimport { dropdownsEndpoint } from \"./Services/requests\";\nimport UseFetchDataEffect from \"./Hooks/UseFetchDataEffect\";\nimport { Dropdowns } from \"./Types/Dropdowns\";\n\nconst theme = createTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#203468',\n      paper: '#203468',\n    },\n    text: {\n      primary: '#eff1f7',\n      secondary: '#eff1f7',\n    },\n    primary: {\n      main: '#eff1f7',\n      contrastText: '#677273',\n    },\n  },\n});\n\nconst App = () => {\n  const [notes, setNotes] = React.useState<Note[]>([]);\n  const [workshops, setWorkshops] = React.useState<WorkshopInterface[]>([]);\n  const [dropdowns, setDropdowns] = React.useState<Dropdowns>({});\n\n  UseFetchDataEffect(dropdownsEndpoint, setDropdowns);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <WorkshopsContext.Provider value={{workshops, setWorkshops}}>\n        <NotesContext.Provider value={{notes, setNotes}}>\n          <DropdownsContext.Provider value={{dropdowns, setDropdowns}}>\n            <Routes/>\n          </DropdownsContext.Provider>\n        </NotesContext.Provider>\n      </WorkshopsContext.Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Permanence this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}